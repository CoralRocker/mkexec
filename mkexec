#!/usr/bin/python
#Import Libraries
import subprocess
import sys

#Define  Functions
def check_args():   #Check Arguments   
    if len(sys.argv) > 1 and sys.argv[1] == '-e':   #If there are arguments and the first one is -e
        subprocess.call('sudo vim /usr/local/bin/mkexec', shell=True)   #Call vim to edit file
        exit()  #Leave
    return

def check_root_required():  #Determine if root is required to make file
    euid = subprocess.check_output('echo $EUID', universal_newlines=True, shell=True)   #Check if user is root
    rdir = subprocess.check_output('ls -al', shell=True)
    if euid =='0\n':
        is_root = True
    else:
        is_root = False
    dir_list = []
    for item in rdir.split():
        dir_list.append(item)
    rdir = dir_list[2]
    dir_list = None
    if 'drwxr-xr-x' in str(rdir):
        root_dir = True
    else:
        root_dir = False
    if root_dir and euid != '0\n':
        prefix = 'sudo'
    else:
        prefix = ''
    return prefix

def get_file_info():
    file_name = input('Name of file: ')
    shebang = input('Enter shebang or leave empty: ')
    if input('Executable? y/n: ')[0].upper() == 'Y':
        executable = True
    else:
        executable = False
    return [file_name, shebang, executable]

def make_file(name, shebang, executable_boolean, prefix):
    subprocess.call(f'{prefix} touch {name}', shell=True)
    if shebang:
        subprocess.call(f'{prefix} tee {name} <<< "{shebang}"', shell=True)
    if executable:
        subprocess.call(f'{prefix} chmod +x {name}', shell=True)
    return

check_args()
prefix = check_root_required()
file_name, shebang, executable = get_file_info()
make_file(file_name, shebang, executable, prefix)
